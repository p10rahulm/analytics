setwd("C:/Users/Rahul/PycharmProjects/AnalyticsEdge")
summary(Tmodel1)
cc= read.csv("climate_change.csv")
cc = read.csv("climate_change.csv")
setwd("C:/Users/Rahul/PycharmProjects/AnalyticsEdge/Unit2")
cc= read.csv("climate_change.csv")
str(cc)
tscc = subset(cc,Year<=2006)
tscc = subset(cc,Year<=2006)
tecc = subset(cc,Year>2006)
Tmodel1 = lm(Temp ~ MEI+CO2+CH4+N2O+CFC.11+CFC.12+TSI+Aerosols,data=tscc)
summary(Tmodel1)
corvar = NBA[c("MEI","CO2","CH4","N2O","CFC.11","CFC.12","Aerosols")]
corvar = tscc[c("MEI","CO2","CH4","N2O","CFC.11","CFC.12","Aerosols")]
cor(corvar)
View(corvar)
View(corvar)
View(cc)
View(cc)
model2 = lm(Temp~MEI+TSI+Aerosols+N2O, dataset=tscc)
str(TSCC)
str(tscc)
model2 = lm( Temp ~ MEI+TSI+Aerosols+N2O, dataset=tscc)
model2 = lm(Temp ~ MEI+TSI+Aerosols+N2O, data=tscc)
summary(model2)
model3 = step(Tmodel1)
summary(model3)
p = predict(model3,newdata=tecc)
p
summary(p)
summary(p$residuals)
p = predict(model3,newdata=tecc)
summary(p)
SST = sum((mean(tscc$Temp)-tscc$Temp)^2)
1-SSE/SST
SSE = sum((p-tscc$Temp)^2)
SST = sum((mean(tscc$Temp)-tscc$Temp)^2)
SST = sum((mean(tscc$Temp)-tcc$Temp)^2)
SSE = sum((p-tecc$Temp)^2)
SST = sum((mean(tscc$Temp)-tecc$Temp)^2)
1-SSE/SST
download.file(https://d37djvu3ytnwxt.cloudfront.net/asset-v1:MITx+15.071x_3+1T2016+type@asset+block/pisa2009train.csv,pisa2009train,curl)
download.file("https://d37djvu3ytnwxt.cloudfront.net/asset-v1:MITx+15.071x_3+1T2016+type@asset+block/pisa2009train.csv","pisa2009train","curl")
pt = read.csv("pisa2009train.csv")
pt = read.csv("pisa2009train")
download.file("https://d37djvu3ytnwxt.cloudfront.net/asset-v1:MITx+15.071x_3+1T2016+type@asset+block/pisa2009train.csv","pisa2009train.csv","curl")
pt = read.csv("pisa2009train.csv")
download.file("https://d37djvu3ytnwxt.cloudfront.net/asset-v1:MITx+15.071x_3+1T2016+type@asset+block/pisa2009test.csv","pisa2009test.csv","curl")
ptest = read.csv("pisa2009test.csv")
summary(pt)
str(pt)
table(pt$grade,pt$male)
tapply(pt$grade,pt$male=1,mean)
tapply(pt$grade,pt$male==1,mean)
View(tecc)
View(corvar)
View(pt)
tapply(pt$readingScore,pt$male==1,mean)
tapply(pt$readingScore,pt$male==1,mean)
summary(pt)
pt = na.omit(pt)
ptest  = na.omit(ptest)
summary(pt)
str(pt)
str(ptest)
ptest$raceeth = relevel(ptest$raceeth, "White")
pt$raceeth = relevel(pt$raceeth, "White")
lmScore = lm(readingScore ~ , data=pt)
lmScore = lm(readingScore ~ ,data=pt)
lmScore = lm(readingScore ~ .,data=pt)
summary(lmscore)
lmScore = lm(readingScore ~ .,data=pt)
summary(lmscore)
summary(lmScore)
model3 = step(Tmodel1) # This is for checking stepwise what is the suitable model
SSE = sum((lmscore$residuals)^2)
SSE = sum((lmScore$residuals)^2)
RMSE = sqrt(SSE/nrow(lmScore$residuals))
RMSE
SSE
RMSE = sqrt(SSE/nrow(lmScore))
RMSE
nrow(lmScore)
RMSE = sqrt(SSE/nrow(pt))
RMSE
summary(lmScore)
predTest = predict(lmScore,newdata = ptest)
summary(predTest)
SSE1 = sum((predTest - ptest$readingScore)^2)
SSE1
SST1 = sum((mean(pt$readingScore) - ptest$readingScore)^2)
RMSE1 = sqrt(SSE1/nrow(ptest))
R12= 1-SSE1/SST1
R12= 1-SSE1/SST1
R12
RMSE1
SST1
mean(pt$readingScore)
download.file("https://d37djvu3ytnwxt.cloudfront.net/asset-v1:MITx+15.071x_3+1T2016+type@asset+block/FluTrain.csv","flutrain.csv","curl")
flt =read.csv("flutrain.csv")
View(flt)
View(flt)
summary(flt)
table(flt$ILI)
table(flt$ILI,flt$week)
table(flt$ILI,flt$week)
table(flt$ILI,flt$week,rm.na = TRUE)
summary(flt)
which(flt$ILI>7.5)
which(flt,flt$ILI>7.5)
which(flt$ILI>7.5,TRUE)
flt[303]
flt(303)
flt.(303)
flt.[303]
flt[]
flt[1]
flt[2]
flt[3]
flt[][3]
flt[1][3]
flt[1][3]
flt[2]
flt[3]
max(flt[3])
max(flt[4])
max(flt[2])
flt[2]
max(flt[2])
which.max(flt$Queries)
which.max(flt$ILI)
flt[303,]
flt[303]
flt[303,]
flt[which.max(flt$Queries),]
flt[which.max(flt$Queries),c('Week','ILI')]
hist(flt$ILI)
plot(log(flt$ILI),flt$Queries)
plot(flt$Queries,log(flt$ILI))
plot(log(flt$ILI),flt$Queries)
plot(flt$Queries,log(flt$ILI))
ft1 = lm(log(ILI)~Queries,data=flt)
summary(ft1)
download.file("https://d37djvu3ytnwxt.cloudfront.net/asset-v1:MITx+15.071x_3+1T2016+type@asset+block/FluTest.csv","ft.csv","curl")
ftest = read.csv("ft.csv")
PredTest1 = exp(predict(FluTrend1, newdata=FluTest))
PredTest1 = exp(predict(ft1, newdata=ftest))
?which
summary(predTest)
summary(predTest1)
PredTest1 = exp(predict(ft1, newdata=ftest))
summary(predTest1)
ft1
PredTest1 = predict(ft1, newdata=ftest)
PredTest1
PredTest1 = exp(predict(ft1, newdata=ftest))
PredTest1
ftest
which(ftest$Week=="2012-03-11 - 2012-03-17")
ftest[which(ftest$Week=="2012-03-11 - 2012-03-17"),]
ftest$Predictions = PredTest1
ftest[which(ftest$Week=="2012-03-11 - 2012-03-17"),]
(2.187378 - 2.293422)/ 2.187378
(2.293422 - 2.187378)/ 2.293422
SSEpred = sum((PredTest1 - ftest$ILI)^2)
SSEpred
RMSEpred = sqrt(SSEpred/nrow(ftest))
install.packages("zoo")
library(zoo)
library(zoo)
ILILag2 = lag(zoo(FluTrain$ILI), -2, na.pad=TRUE)
FluTrain$ILILag2 = coredata(ILILag2)
ILILag2 = lag(zoo(flt$ILI), -2, na.pad=TRUE)
flt$ILILag2 = coredata(ILILag2)
summary(flt)
plot(flt$ILILag2,flt$ILI)
plot(log(flt$ILILag2),log(flt$ILI))
ft2 = lm(log(ILI) ~ Queries+log(ILILag2), data = flt )
summary(ft2)
summary(ft1)
ILILag2 = lag(zoo(ftest$ILI), -2, na.pad=TRUE)
ftest$ILILag2 = coredata(ILILag2)
summary(ftest)
ftest$ILILag2[1] = flt$ILI[nrow(flt)-1]
ftest$ILILag2[2] = flt$ILI[nrow(flt)]
ftest$ILILag2[1] = flt$ILI[nrow(flt)-1]
ftest$ILILag2[2] = flt$ILI[nrow(flt)]
ILILag2 = lag(zoo(FluTrain$ILI), -2, na.pad=TRUE)
ftest[1,]
ftest[1:2,]
ftpred=exp(predict(ft2,newdata = ftest))
ftest$pred = ftpred
ftest
SSEpred2 = sum((ftpred - ftest$ILI)^2)
RMSEpred2 = sqrt((SSEpred2)/nrow(ftest))
